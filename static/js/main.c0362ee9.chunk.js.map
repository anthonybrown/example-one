{"version":3,"sources":["components/Credits/index.js","components/Cubes/Cube.js","components/Cubes/index.js","components/Lights/index.js","components/Environment/index.js","index.js"],"names":["className","href","target","rel","jsx","mesh","useRef","time","useState","isHovered","setIsHovered","isActive","setIsActive","isActiveRef","position","useMemo","random","timeMod","color","useEffect","current","useFrame","rotation","y","Math","sin","onHover","useCallback","e","value","stopPropagation","onClick","v","ref","onPointerOver","onPointerOut","attach","args","roughness","metalness","group","nodesCubes","map","Array","el","i","Cube","FakeSphere","intensity","side","BackSide","App","Credits","Cubes","Lights","Environment","rootElement","document","getElementById","ReactDOM","render"],"mappings":"uLAEe,MAEX,sBAAKA,UAAU,UAAf,UACE,mBACEC,KAAK,uCACLC,OAAO,SACPC,IAAI,sBAHN,+BAOA,uBAAOC,KAAG,EAAV,8b,cCFS,OACb,MAAMC,EAAOC,mBACPC,EAAOD,iBAAO,GAFD,EAIeE,oBAAS,GAJxB,mBAIZC,EAJY,KAIDC,EAJC,OAKaF,oBAAS,GALtB,mBAKZG,EALY,KAKFC,EALE,KAObC,EAAcP,iBAAOK,GAGrBG,EAAWC,mBAAQ,IAChB,CAACC,kBAAQ,EAAG,GAAG,GAAOA,kBAAQ,EAAG,GAAG,GAAOA,kBAAQ,EAAG,GAAG,KAC/D,IAGGC,EAAUF,mBAAQ,IAAMC,iBAAO,GAAK,GAAG,IAAO,IAG9CE,EAAQT,EAAY,SAAWE,EAAW,SAAW,SAE3DQ,qBAAU,KACRN,EAAYO,QAAUT,IACrB,CAACA,IAGJU,aAAS,KACPhB,EAAKe,QAAQE,SAASC,GAAK,IAAON,EAC9BJ,EAAYO,UACdb,EAAKa,SAAW,IAChBf,EAAKe,QAAQN,SAASS,EAAIT,EAAS,GAA8B,GAAzBU,KAAKC,IAAIlB,EAAKa,aAK1D,MAAMM,EAAUC,uBACd,CAACC,EAAGC,KACFD,EAAEE,kBACFpB,EAAamB,KAEf,CAACnB,IAGGqB,EAAUJ,uBACbC,IACCA,EAAEE,kBACFlB,GAAaoB,IAAOA,MAEtB,CAACpB,IAGH,OACE,uBACEqB,IAAK5B,EACLS,SAAUA,EACViB,QAAUH,GAAMG,EAAQH,GACxBM,cAAgBN,GAAMF,EAAQE,GAAG,GACjCO,aAAeP,GAAMF,EAAQE,GAAG,GALlC,UAOE,mCAAmBQ,OAAO,WAAWC,KAAM,CAAC,KAAO,GAAK,OACxD,sCACED,OAAO,WACPlB,MAAOA,EACPoB,UAAW,GACXC,UAAW,SCnEJ,OACb,MAAMC,EAAQlC,mBAEde,aAAS,KACPmB,EAAMpB,QAAQE,SAASC,GAAK,QAG9B,MAAMkB,EAAaC,cAAI,IAAIC,MAAM,KAAK,CAACC,EAAIC,IAClC,cAACC,EAAD,GAAWD,KAGpB,OAAO,uBAAOZ,IAAKO,EAAZ,SAAoBC,KCfd,OACb,MAAMM,EAAa,IAEf,iCACE,sCAAsBV,KAAM,CAAC,GAAK,GAAI,IAAKD,OAAO,aAClD,mCAAmBlB,MAAO,SAAUkB,OAAO,gBAKjD,OACE,kCACE,cAACW,EAAD,IACA,8BAAcC,UAAW,KACzB,4BAAYA,UAAW,KAAMlC,SAAU,CAAC,EAAG,EAAG,S,OCbrC,MAEX,iCACE,sCAAsBuB,KAAM,CAAC,EAAG,GAAI,IAAKD,OAAO,aAChD,sCACElB,MAAO,SACPkB,OAAO,WACPa,KAAMC,WACNX,UAAW,Q,MCAnB,SAASY,IACP,OACE,qCACE,cAACC,EAAD,IACA,eAAC,IAAD,WACE,cAACC,EAAD,IACA,cAACC,EAAD,IACA,cAACC,EAAD,UAMR,MAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAACT,EAAD,IAASK,K","file":"static/js/main.c0362ee9.chunk.js","sourcesContent":["import React from 'react';\n\nexport default () => {\n  return (\n    <div className=\"credits\">\n      <a\n        href=\"https://www.twitter.com/codemonky007\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        TW: @codemonky007\n      </a>\n      <style jsx>{`\n        .credits {\n          position: fixed;\n          bottom: 30px;\n          left: 30px;\n          z-index: 10;\n          color: white;\n          font-family: 'Noto Sans JP', sans-serif;\n          font-size: 12px;\n          font-weight: 700;\n          letter-spacing: -0.02em;\n          opacity: 0.5;\n          transition: all 0.6s;\n        }\n\n        .credits:hover {\n          opacity: 1;\n        }\n      `}</style>\n    </div>\n  );\n};\n","import React, {\n  useMemo,\n  useRef,\n  useState,\n  useEffect,\n  useCallback,\n} from 'react';\nimport { random } from 'lodash';\nimport { useFrame } from 'react-three-fiber';\n\nexport default () => {\n  const mesh = useRef();\n  const time = useRef(0);\n\n  const [isHovered, setIsHovered] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  const isActiveRef = useRef(isActive);\n\n  // position\n  const position = useMemo(() => {\n    return [random(-3, 3, true), random(-3, 3, true), random(-3, 3, true)];\n  }, []);\n\n  // random time mod factor\n  const timeMod = useMemo(() => random(0.1, 4, true), []);\n\n  // color\n  const color = isHovered ? 0xe5d54d : isActive ? 0xf7e7e5 : 0xf95b3c;\n\n  useEffect(() => {\n    isActiveRef.current = isActive;\n  }, [isActive]);\n\n  // raf loop\n  useFrame(() => {\n    mesh.current.rotation.y += 0.01 * timeMod;\n    if (isActiveRef.current) {\n      time.current += 0.03;\n      mesh.current.position.y = position[1] + Math.sin(time.current) * 0.4;\n    }\n  });\n\n  // Events\n  const onHover = useCallback(\n    (e, value) => {\n      e.stopPropagation();\n      setIsHovered(value);\n    },\n    [setIsHovered],\n  );\n\n  const onClick = useCallback(\n    (e) => {\n      e.stopPropagation();\n      setIsActive((v) => !v);\n    },\n    [setIsActive],\n  );\n\n  return (\n    <mesh\n      ref={mesh}\n      position={position}\n      onClick={(e) => onClick(e)}\n      onPointerOver={(e) => onHover(e, true)}\n      onPointerOut={(e) => onHover(e, false)}\n    >\n      <boxBufferGeometry attach=\"geometry\" args={[0.047, 0.5, 0.29]} />\n      <meshStandardMaterial\n        attach=\"material\"\n        color={color}\n        roughness={0.6}\n        metalness={0.1}\n      />\n    </mesh>\n  );\n};\n","import React, { useRef } from 'react';\nimport { map } from 'lodash';\nimport { useFrame } from 'react-three-fiber';\n\nimport Cube from './Cube';\n\nexport default () => {\n  const group = useRef();\n\n  useFrame(() => {\n    group.current.rotation.y += 0.005;\n  });\n\n  const nodesCubes = map(new Array(50), (el, i) => {\n    return <Cube key={i} />;\n  });\n\n  return <group ref={group}>{nodesCubes}</group>;\n};\n","import React from 'react';\n\nexport default () => {\n  const FakeSphere = () => {\n    return (\n      <mesh>\n        <sphereBufferGeometry args={[0.7, 30, 30]} attach=\"geometry\" />\n        <meshBasicMaterial color={0xfff1ef} attach=\"material\" />\n      </mesh>\n    );\n  };\n\n  return (\n    <group>\n      <FakeSphere />\n      <ambientLight intensity={0.9} />\n      <pointLight intensity={1.12} position={[0, 0, 0]} />\n    </group>\n  );\n};\n","import React from 'react';\nimport { BackSide } from 'three';\n\nexport default () => {\n  return (\n    <mesh>\n      <sphereBufferGeometry args={[5, 10, 10]} attach=\"geometry\" />\n      <meshStandardMaterial\n        color={0xd2452b}\n        attach=\"material\"\n        side={BackSide}\n        metalness={0.4}\n      />\n    </mesh>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Canvas } from 'react-three-fiber';\n\nimport Credits from './components/Credits';\nimport Cubes from './components/Cubes';\nimport Lights from './components/Lights';\nimport Environment from './components/Environment';\n\nimport './styles.css';\n\nfunction App() {\n  return (\n    <>\n      <Credits />\n      <Canvas>\n        <Cubes />\n        <Lights />\n        <Environment />\n      </Canvas>\n    </>\n  );\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}